% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parentslist.R
\name{topo_sort_parentslist}
\alias{topo_sort_parentslist}
\alias{all_topo_sort}
\title{Topological sorting of parentslist}
\usage{
topo_sort_parentslist(x, all = FALSE)

all_topo_sort(x)
}
\arguments{
\item{x}{an object of class \code{parentslist},
or more generally a list of nodes with parents information.}

\item{all, }{logical if \code{TRUE} all topological orders will be generated with
function \code{all_topo_sort}.}
}
\value{
a matrix where every row is a topological ordeing of the DAG.
}
\description{
Topological sorting of parentslist
}
\details{
This function will return a topological order of the graph encoded in
\code{x} if the graph is a DAG, otherwise a partial order will be returned.

Object \code{x} should represent a DAG, otherwise if cycles are present,
the output will not be complete orders of the graph.
}
\examples{
pl <- list(A = list(), B = list(), C = list(parents = c("A", "B")),
D = list(parents = c("C")),
E = list(parents = c("A")),
F = list(parents = c("B", "E")))
topo_sort_parentslist(pl)
pl <- list(A = list(), B = list(), C = list(parents = c("A", "B")),
D = list(parents = c("C")),
E = list(parents = c("A")),
F = list(parents = c("B", "E")))
all_topo_sort(pl)
}
